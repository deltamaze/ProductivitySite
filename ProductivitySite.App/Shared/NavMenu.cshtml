@using ProductivitySite.App.Services
@using Microsoft.JSInterop;
@inject AppState state
<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">ProductivitySite</a>
    <button class="navbar-toggler" onclick=@ToggleNavMenu>
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class=@(collapseNavMenu ? "collapse" : null) onclick=@ToggleNavMenu>
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match=NavLinkMatch.All>
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="signin">
                <span class="oi oi-plus" aria-hidden="true"></span> Sign In
            </NavLink>
        </li>
        <li class="nav-item px-3" style="@(String.IsNullOrWhiteSpace(state.userEmail)  ? "display:none" :  "")">
            <a onclick=@(()=>state.SignOut() ) class="nav-link" href="signin">
                <span class="oi oi-plus" aria-hidden="true"></span> Sign Out
            </a>
        </li>
        @*<li class="nav-item px-3">
            <a class="nav-link" onclick=@(()=>OpenModal() ) href="javascript:">
                <span class="oi oi-plus" aria-hidden="true"></span> Modal Test
            </a>
        </li>*@
        @*<li class="nav-item px-3">
                <NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
                </NavLink>
            </li>*@
    </ul>
</div>

@functions {
protected override void OnInit()
{
    state.OnChange += StateHasChanged;
}

bool collapseNavMenu = true;

void ToggleNavMenu()
{
    collapseNavMenu = !collapseNavMenu;
}
void OpenModal()
{
    Microsoft.JSInterop.JSRuntime.Current.InvokeAsync<bool>("jsFunction.triggerModal");
}

}


