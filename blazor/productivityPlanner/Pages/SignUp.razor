@page "/signup"
@using productivityPlanner.Models;
@using productivityPlanner.Shared;
@using productivityPlanner.Services;
@inject AppState state
@inject FirebaseService fb
<h1>Sign Up</h1>

<EditForm Model="@signUpModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <p>
        <label for="Email">Email: </label>
        <InputText id="Email" @bind-Value="@signUpModel.Email" />
    </p>
    <p>
        <label for="Password">Password: </label>
        <MyInput Type="password" Id="Password" @bind-Value="@signUpModel.Password" />
    </p>
    @*<p>
            <label for="ConfirmPassword">Confirm Password: </label>
            <InputText id="ConfirmPassword" @bind-Value="@signUpModel.ConfirmPassword" />
        </p>*@
    <button type="submit">Submit</button>
</EditForm>
<p>@displayResult</p>

@code {
    SignUpModel signUpModel = new SignUpModel();
    string displayResult = "";

    void HandleValidSubmit() //known issue, data annotation validator comparer issue with onvalidsubmit, re-test on 3.1
                             //https://github.com/aspnet/AspNetCore/issues/10526
    {
        string test = "BreakpointTest";
        Task<string> task = Task.Run<string>(async () => await fb.SignUp(signUpModel)).ContinueWith(task => displayResult = task.Result);

    }
}
